{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/vitormrts/\\xC1rea de Trabalho/Projects/move-it-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/vitormrts/\\xC1rea de Trabalho/Projects/move-it-app/src/components/Countdown.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport styles from \"../styles/components/Countdown.module.css\";\nvar countdownTimeout;\nexport function Countdown() {\n  _s();\n\n  var _useState = useState(0.1 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  var _String$padStart$spli = String(minutes).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1]; // se nao tiver 2, adiciona a esquerda\n\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondLeft = _String$padStart$spli4[0],\n      secondRight = _String$padStart$spli4[1]; // se nao tiver 2, adiciona a esquerda\n  // altera o estado do botao\n\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(0.1 * 60);\n  } // Countdown iniciado: contagem regressiva\n  // Recebe dois parametros, o primeiro e a funcao que sera executada, ja o segundo eh a variavel que executara a funcao caso ela seja alterada\n  // se clicarmos no botao, o efeito active eh alterado, entao useEffect eh ativado\n\n\n  useEffect(function () {\n    console.log(isActive);\n\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time == 0) {}\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"\".concat(styles.countdownButton, \" \").concat(styles.countdownButtonActive),\n      onClick: resetCountdown,\n      children: \"Abandonar ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.countdownButton,\n      onClick: startCountdown,\n      children: \"Iniciar um ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Countdown, \"ocrxlP93zfM61bh38iet/2CNRQY=\");\n\n_c = Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["/home/vitormrts/Área de Trabalho/Projects/move-it-app/src/components/Countdown.tsx"],"names":["useState","useEffect","styles","countdownTimeout","Countdown","time","setTime","isActive","setIsActive","minutes","Math","floor","seconds","String","padStart","split","minuteLeft","minuteRight","secondLeft","secondRight","startCountdown","resetCountdown","clearTimeout","console","log","setTimeout","countdownContainer","countdownButton","countdownButtonActive"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\"\nimport styles from \"../styles/components/Countdown.module.css\"\n\nlet countdownTimeout: NodeJS.Timeout\n\nexport function Countdown() {\n    const [time, setTime] = useState(0.1 * 60)\n    const [isActive, setIsActive] = useState(false)\n\n    const minutes = Math.floor(time / 60)\n    const seconds = time % 60\n \n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('') // se nao tiver 2, adiciona a esquerda\n    const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('') // se nao tiver 2, adiciona a esquerda\n\n    // altera o estado do botao\n    function startCountdown() {\n        setIsActive(true)\n    }\n\n    function resetCountdown() {\n        clearTimeout(countdownTimeout)\n        setIsActive(false)\n        setTime(0.1*60)\n    }\n\n    // Countdown iniciado: contagem regressiva\n    // Recebe dois parametros, o primeiro e a funcao que sera executada, ja o segundo eh a variavel que executara a funcao caso ela seja alterada\n    // se clicarmos no botao, o efeito active eh alterado, entao useEffect eh ativado\n    useEffect( () => {\n        console.log(isActive)\n        if (isActive && time > 0) {\n            countdownTimeout = setTimeout( () => {\n                setTime(time - 1)\n            }, 1000)\n        } else if (isActive && time == 0) {\n            \n        }\n    }, [isActive, time])\n\n\n\n    return (\n        <div>\n            <div className={styles.countdownContainer}>\n                <div>\n                    <span>{minuteLeft}</span>\n                    <span>{minuteRight}</span>\n                </div>\n                <span>:</span>\n                <div>\n                    <span>{secondLeft}</span>\n                    <span>{secondRight}</span>\n                </div>\n            </div>\n\n            {isActive ? (\n            <button type=\"button\" className={`${styles.countdownButton} ${styles.countdownButtonActive}`} onClick={resetCountdown}>\n                Abandonar ciclo\n            </button>\n            ) : (\n            <button type=\"button\" className={styles.countdownButton} onClick={startCountdown}>\n                Iniciar um ciclo\n            </button>) }\n\n\n\n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}