{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/vitormrts/\\xC1rea de Trabalho/Projects/move-it-app/src/components/Countdown/Countdown.tsx\";\nimport { useContext } from \"react\";\nimport { CountdownContext } from \"../../contexts/CountdownContext\";\nimport styles from \"./Countdown.module.css\";\nlet countdownTimeout;\nexport function Countdown() {\n  const {\n    minutes,\n    seconds,\n    hasFinished,\n    isActive,\n    resetCountdown,\n    startCountdown\n  } = useContext(CountdownContext);\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split(''); // se nao tiver 2, adiciona a esquerda\n\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split(''); // se nao tiver 2, adiciona a esquerda\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['countdown-container'],\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles['countdown-container__button'],\n      children: \"Ciclo encerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `${styles['countdown-container__button']} ${styles['countdown-container__button']}`,\n        onClick: resetCountdown,\n        children: \"Abandonar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.countdownButton,\n        onClick: startCountdown,\n        children: \"Iniciar um ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/vitormrts/√Årea de Trabalho/Projects/move-it-app/src/components/Countdown/Countdown.tsx"],"names":["useContext","CountdownContext","styles","countdownTimeout","Countdown","minutes","seconds","hasFinished","isActive","resetCountdown","startCountdown","minuteLeft","minuteRight","String","padStart","split","secondLeft","secondRight","countdownButton"],"mappings":";;;AAAA,SAA8BA,UAA9B,QAAgD,OAAhD;AAEA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,IAAIC,gBAAJ;AAEA,OAAO,SAASC,SAAT,GAAqB;AACxB,QAAM;AACFC,IAAAA,OADE;AAEFC,IAAAA,OAFE;AAGFC,IAAAA,WAHE;AAIFC,IAAAA,QAJE;AAKFC,IAAAA,cALE;AAMFC,IAAAA;AANE,MAOFV,UAAU,CAACC,gBAAD,CAPd;AASA,QAAM,CAACU,UAAD,EAAaC,WAAb,IAA4BC,MAAM,CAACR,OAAD,CAAN,CAAgBS,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC,CAVwB,CAUqD;;AAC7E,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BJ,MAAM,CAACP,OAAD,CAAN,CAAgBQ,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC,CAXwB,CAWqD;;AAE7E,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEb,MAAM,CAAC,qBAAD,CAAtB;AAAA,8BACI;AAAA,gCACI;AAAA,oBAAOS;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,gCACI;AAAA,oBAAOI;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAaKV,WAAW,gBACR;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,SAAS,EAAEL,MAAM,CAAC,6BAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAKJ;AAAA,sBAAIM,QAAQ,gBACR;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAG,GAAEN,MAAM,CAAC,6BAAD,CAAgC,IAAGA,MAAM,CAAC,6BAAD,CAAgC,EAAnH;AAAsH,QAAA,OAAO,EAAEO,cAA/H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,gBAKJ;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAEP,MAAM,CAACgB,eAAxC;AAAyD,QAAA,OAAO,EAAER,cAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALR;AAAA,oBAlBZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH","sourcesContent":["import { useState, useEffect, useContext } from \"react\"\nimport { ChallengesContext } from \"../../contexts/ChallengesContext\"\nimport { CountdownContext } from \"../../contexts/CountdownContext\"\nimport styles from \"./Countdown.module.css\"\n\nlet countdownTimeout: NodeJS.Timeout\n\nexport function Countdown() {\n    const {\n        minutes,\n        seconds,\n        hasFinished,\n        isActive,\n        resetCountdown,\n        startCountdown\n    } = useContext(CountdownContext)\n\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('') // se nao tiver 2, adiciona a esquerda\n    const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('') // se nao tiver 2, adiciona a esquerda\n\n    return (\n        <div>\n            <div className={styles['countdown-container']}>\n                <div>\n                    <span>{minuteLeft}</span>\n                    <span>{minuteRight}</span>\n                </div>\n                <span>:</span>\n                <div>\n                    <span>{secondLeft}</span>\n                    <span>{secondRight}</span>\n                </div>\n            </div>\n\n            {hasFinished ? (\n                <button disabled className={styles['countdown-container__button']}>\n                    Ciclo encerrado\n                </button>)\n                : (\n                    <> {isActive ? (\n                        <button type=\"button\" className={`${styles['countdown-container__button']} ${styles['countdown-container__button']}`} onClick={resetCountdown}>\n                            Abandonar ciclo\n                        </button>\n                    ) : (\n                            <button type=\"button\" className={styles.countdownButton} onClick={startCountdown}>\n                                Iniciar um ciclo\n                            </button>)}\n                    </>\n                )}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}