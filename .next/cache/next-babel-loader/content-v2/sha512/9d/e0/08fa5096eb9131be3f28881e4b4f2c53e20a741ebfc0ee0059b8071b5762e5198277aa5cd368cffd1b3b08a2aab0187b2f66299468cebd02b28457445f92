{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/vitormrts/\\xC1rea de Trabalho/Projects/move-it-app/src/components/Countdown.tsx\";\nimport { useEffect } from \"react\";\nimport styles from \"../styles/components/Countdown.module.css\";\nlet countdownTimeout;\nexport function Countdown() {\n  const minutes = Math.floor(time / 60);\n  const seconds = time % 60;\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split(''); // se nao tiver 2, adiciona a esquerda\n\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split(''); // se nao tiver 2, adiciona a esquerda\n  // altera o estado do botao\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(0.1 * 60);\n  } // Countdown iniciado: contagem regressiva\n  // Recebe dois parametros, o primeiro e a funcao que sera executada, ja o segundo eh a variavel que executara a funcao caso ela seja alterada\n  // se clicarmos no botao, o efeito active eh alterado, entao useEffect eh ativado\n\n\n  useEffect(() => {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(() => {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time == 0) {\n      setHasFinished(true);\n      setIsActive(false);\n      startNewChallenge();\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.countdownButton,\n      children: \"Ciclo encerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n        onClick: resetCountdown,\n        children: \"Abandonar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.countdownButton,\n        onClick: startCountdown,\n        children: \"Iniciar um ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/vitormrts/Área de Trabalho/Projects/move-it-app/src/components/Countdown.tsx"],"names":["useEffect","styles","countdownTimeout","Countdown","minutes","Math","floor","time","seconds","minuteLeft","minuteRight","String","padStart","split","secondLeft","secondRight","startCountdown","setIsActive","resetCountdown","clearTimeout","setTime","isActive","setTimeout","setHasFinished","startNewChallenge","countdownContainer","hasFinished","countdownButton","countdownButtonActive"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from \"react\"\nimport { ChallengesContext } from \"../contexts/ChallengesContext\"\nimport styles from \"../styles/components/Countdown.module.css\"\n\nlet countdownTimeout: NodeJS.Timeout\n\nexport function Countdown() {\n    const minutes = Math.floor(time / 60)\n    const seconds = time % 60\n \n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('') // se nao tiver 2, adiciona a esquerda\n    const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('') // se nao tiver 2, adiciona a esquerda\n\n    // altera o estado do botao\n    function startCountdown() {\n        setIsActive(true)\n    }\n\n    function resetCountdown() {\n        clearTimeout(countdownTimeout)\n        setIsActive(false)\n        setTime(0.1*60)\n    }\n\n    // Countdown iniciado: contagem regressiva\n    // Recebe dois parametros, o primeiro e a funcao que sera executada, ja o segundo eh a variavel que executara a funcao caso ela seja alterada\n    // se clicarmos no botao, o efeito active eh alterado, entao useEffect eh ativado\n    useEffect( () => {\n        if (isActive && time > 0) {\n            countdownTimeout = setTimeout( () => {\n                setTime(time - 1)\n            }, 1000)\n        } else if (isActive && time == 0) {\n            setHasFinished(true)\n            setIsActive(false)\n            startNewChallenge()\n        }\n    }, [isActive, time])\n\n\n\n    return (\n        <div>\n            <div className={styles.countdownContainer}>\n                <div>\n                    <span>{minuteLeft}</span>\n                    <span>{minuteRight}</span>\n                </div>\n                <span>:</span>\n                <div>\n                    <span>{secondLeft}</span>\n                    <span>{secondRight}</span>\n                </div>\n            </div>\n\n            {hasFinished ? (\n            <button disabled className={styles.countdownButton}>\n                Ciclo encerrado\n            </button>)\n            : (\n                <> {isActive ? (\n                    <button type=\"button\" className={`${styles.countdownButton} ${styles.countdownButtonActive}`} onClick={resetCountdown}>\n                        Abandonar ciclo\n                    </button>\n                    ) : (\n                    <button type=\"button\" className={styles.countdownButton} onClick={startCountdown}>\n                        Iniciar um ciclo\n                    </button>)}\n                </>\n            )}\n\n\n\n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}