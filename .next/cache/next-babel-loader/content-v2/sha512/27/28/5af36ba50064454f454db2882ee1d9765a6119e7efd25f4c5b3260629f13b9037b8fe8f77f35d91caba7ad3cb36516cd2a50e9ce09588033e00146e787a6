{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/vitormrts/\\xC1rea de Trabalho/Projects/move-it-app/src/contexts/ChallengesContext.tsx\";\nimport { createContext, useState } from 'react';\nimport challenges from \"../../challenges.json\";\nexport const ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider({\n  children\n}) {\n  const {\n    0: level,\n    1: setLevel\n  } = useState(1);\n  const {\n    0: currenteExperience,\n    1: setCurrenteExperience\n  } = useState(0);\n  const {\n    0: challengesCompleted,\n    1: setChallengesCompleted\n  } = useState(0);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    const challenge = cha;\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level,\n      challengesCompleted,\n      currenteExperience,\n      levelUp,\n      startNewChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/vitormrts/Área de Trabalho/Projects/move-it-app/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","challenges","ChallengesContext","ChallengesProvider","children","level","setLevel","currenteExperience","setCurrenteExperience","challengesCompleted","setChallengesCompleted","levelUp","startNewChallenge","randomChallengeIndex","Math","floor","random","length","challenge","cha"],"mappings":";;AAAA,SAASA,aAAT,EAA6CC,QAA7C,QAA6D,OAA7D;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAeA,OAAO,MAAMC,iBAAiB,gBAAGH,aAAa,CAAC,EAAD,CAAvC;AAGP,OAAO,SAASI,kBAAT,CAA4B;AAAEC,EAAAA;AAAF,CAA5B,EAAmE;AACtE,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAA,OAACO,kBAAD;AAAA,OAAqBC;AAArB,MAA8CR,QAAQ,CAAC,CAAD,CAA5D;AACA,QAAM;AAAA,OAACS,mBAAD;AAAA,OAAsBC;AAAtB,MAAgDV,QAAQ,CAAC,CAAD,CAA9D;;AAEA,WAASW,OAAT,GAAmB;AACfL,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH;;AAED,WAASO,iBAAT,GAA6B;AACzB,UAAMC,oBAAoB,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBf,UAAU,CAACgB,MAAtC,CAA7B;AACA,UAAMC,SAAS,GAAGC,GAAlB;AACH;;AAED,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAACd,MAAAA,KAAD;AAAQI,MAAAA,mBAAR;AAA6BF,MAAAA,kBAA7B;AAAiDI,MAAAA,OAAjD;AAA0DC,MAAAA;AAA1D,KAAnC;AAAA,cACKR;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH","sourcesContent":["import { createContext, UseState, ReactNode, useState } from 'react'\nimport challenges from \"../../challenges.json\"\n\n\ninterface ChallengesContextData {\n    level: number;\n    challengesCompleted: number;\n    currenteExperience: number;\n    levelUp: () => void;\n    startNewChallenge: () => void;\n}\n\ninterface ChallengesProviderProps {\n    children: ReactNode\n}\n\nexport const ChallengesContext = createContext({} as ChallengesContextData)\n\n\nexport function ChallengesProvider({ children }: ChallengesProviderProps) {\n    const [level, setLevel] = useState(1)\n    const [currenteExperience, setCurrenteExperience] = useState(0)\n    const [challengesCompleted, setChallengesCompleted] = useState(0)\n\n    function levelUp() {\n        setLevel(level + 1)\n    }\n\n    function startNewChallenge() {\n        const randomChallengeIndex = Math.floor(Math.random() * challenges.length)\n        const challenge = cha\n    }\n\n    return (\n        <ChallengesContext.Provider value={{level, challengesCompleted, currenteExperience, levelUp, startNewChallenge}}>\n            {children}\n        </ChallengesContext.Provider>\n     )\n}\n\n"]},"metadata":{},"sourceType":"module"}